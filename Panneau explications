import { Animated, Text, TouchableOpacity, Dimensions } from 'react-native';
const SCREEN_HEIGHT = Dimensions.get('window').height;

#Variables pour animation et sÃ©lection
const [selectedToilet, setSelectedToilet] = useState<Toilet | null>(null);
const slideAnim = useState(new Animated.Value(SCREEN_HEIGHT))[0];
const fadeAnim = useState(new Animated.Value(0))[0];
const scaleAnim = useState(new Animated.Value(0.9))[0];

#Animation de la carte d'infos
useEffect(() => {
  if (selectedToilet) {
    Animated.parallel([
      Animated.spring(slideAnim, { toValue: 0, useNativeDriver: true, tension: 100, friction: 8 }),
      Animated.timing(fadeAnim, { toValue: 1, duration: 400, useNativeDriver: true }),
      Animated.spring(scaleAnim, { toValue: 1, useNativeDriver: true, tension: 120, friction: 6 })
    ]).start();
  } else {
    Animated.parallel([
      Animated.timing(slideAnim, { toValue: SCREEN_HEIGHT, duration: 350, useNativeDriver: true }),
      Animated.timing(fadeAnim, { toValue: 0, duration: 250, useNativeDriver: true }),
      Animated.timing(scaleAnim, { toValue: 0.9, duration: 250, useNativeDriver: true })
    ]).start();
  }
}, [selectedToilet]);

#Couleur des badges
const getStatusColor = (status: string, type: 'fee' | 'wheelchair' | 'access') => {
  if (type === 'fee') return status === 'Gratuit' ? '#10B981' : status === 'Payant' ? '#F59E0B' : '#6B7280';
  if (type === 'wheelchair') return status === 'Accessible' ? '#10B981' : status === 'Non accessible' ? '#EF4444' : '#6B7280';
  if (type === 'access') return status === 'Publique' ? '#10B981' : '#6B7280';
  return '#6B7280';
};

#Composant InfoRow
const InfoRow = ({ icon, label, value, type }: { icon: string, label: string, value: string, type?: 'fee' | 'wheelchair' | 'access' }) => (
  <View style={styles.infoRow}>
    <View style={styles.infoLeft}>
      <Text style={styles.infoIcon}>{icon}</Text>
      <Text style={styles.infoLabel}>{label}</Text>
    </View>
    <View style={[styles.statusBadge, { backgroundColor: type ? getStatusColor(value, type) : '#6B7280' }]}>
      <Text style={styles.statusText}>{value}</Text>
    </View>
  </View>
);

#Carte d'infos animÃ©e
{selectedToilet && (
  <Animated.View
    style={[styles.infoCard, { transform: [{ translateY: slideAnim }, { scale: scaleAnim }], opacity: fadeAnim }]}
  >
    <View style={styles.cardContent}>
      <View style={styles.header}>
        <View style={styles.titleContainer}>
          <Text style={styles.title}>ðŸš» {selectedToilet.title}</Text>
          <Text style={styles.subtitle}>{selectedToilet.description}</Text>
        </View>
        <TouchableOpacity onPress={() => setSelectedToilet(null)} style={styles.closeButton} activeOpacity={0.7}>
          <Text style={styles.closeIcon}>Ã—</Text>
        </TouchableOpacity>
      </View>
      <View style={styles.separator} />
      <View style={styles.infoContainer}>
        <InfoRow icon="ðŸ’°" label="Tarif" value={selectedToilet.fee} type="fee" />
        <InfoRow icon="ðŸ•’" label="Horaires" value={selectedToilet.openingHours || 'Non spÃ©cifiÃ©'} />
        <InfoRow icon="ðŸšª" label="AccÃ¨s" value={selectedToilet.access || 'Inconnu'} type="access" />
        <InfoRow icon="â™¿" label="AccessibilitÃ©" value={selectedToilet.wheelchair} type="wheelchair" />
      </View>
    </View>
  </Animated.View>
)}


const styles = StyleSheet.create({
  infoCard: { position: 'absolute', bottom: 30, left: 20, right: 20, backgroundColor: '#FFF', borderRadius: 24, elevation: 20, shadowColor: '#000', shadowOffset: { width: 0, height: 12 }, shadowOpacity: 0.25, shadowRadius: 20 },
  cardContent: { padding: 24 },
  header: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: 20 },
  titleContainer: { flex: 1, marginRight: 16 },
  title: { fontSize: 20, fontWeight: '700', color: '#1F2937', marginBottom: 4 },
  subtitle: { fontSize: 14, color: '#6B7280', fontWeight: '500' },
  closeButton: { backgroundColor: '#F3F4F6', width: 36, height: 36, borderRadius: 18, alignItems: 'center', justifyContent: 'center', elevation: 2, shadowColor: '#000', shadowOffset: { width: 0, height: 2 }, shadowOpacity: 0.1, shadowRadius: 4 },
  closeIcon: { fontSize: 20, color: '#6B7280', fontWeight: '300' },
  separator: { height: 1, backgroundColor: '#E5E7EB', marginBottom: 20 },
  infoContainer: { gap: 16 },
  infoRow: { flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' },
  infoLeft: { flexDirection: 'row', alignItems: 'center', flex: 1 },
  infoIcon: { fontSize: 20, marginRight: 12, width: 24 },
  infoLabel: { fontSize: 16, color: '#374151', fontWeight: '600', flex: 1 },
  statusBadge: { paddingHorizontal: 12, paddingVertical: 6, borderRadius: 12, minWidth: 80, alignItems: 'center' },
  statusText: { color: '#FFF', fontSize: 14, fontWeight: '600' }
});
